

class Context<T>{

	private defaultValue : T;
	private internalValue : T;

	constructor(value : T) {
		this.defaultValue = value;
		this.internalValue = value;
	}


	provider(value : T) {
		this.internalValue = value
	}

	getContext() : T {
		return this.internalValue
	}
};

export function createContext<T>(value : T) : Context<T> {
	return new Context<T>(value);
}


export function useContext<T>(context : Context<T>) : T {
	return context.getContext()
}